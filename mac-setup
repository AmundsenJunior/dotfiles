homebrew
  $ /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

Dev setup
  $ mkdir -p ~/dev/notes

slack
  $ brew cask install slack

chrome
  $ brew cask install google-chrome

1password
  $ brew cask install 1password
  1password Chrome extension: https://chrome.google.com/webstore/detail/1password-extension-deskt/aomjjhallfgjeglblehebfpbcfeobpgk?hl=en

iterm2
  $ brew cask install iterm2

zsh
  $ brew install zsh zsh-completions
  $ sudo vim /etc/shells
    /usr/local/bin/zsh
  $ chsh -s `which zsh`

oh-my-zsh
  $ sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  $ vim +11 ~/.zshrc
    ZSH_THEME="pygmalion"
    plugins=(git colorize osx aws docker golang helm kubectl tmux)
  $ source ~/.zshrc

kubectl zsh prompt
  $ git clone git@github.com:superbrothers/zsh-kubectl-prompt.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-kubectl-prompt
  $ vim +61 ~/.oh-my-zsh/custom/plugins/zsh-kubectl-prompt/kubectl.zsh
    ZSH_KUBECTL_CONTEXT="${context}"
    eks_cluster="$(echo ${ZSH_KUBECTL_CONTEXT} | sed -n 's/arn:aws:eks:[a-z0-9\-]*:[0-9]*:cluster\/\([A-Za-z0-9\-\/]*\)/\1/p')"
    if [[ ! -z "$eks_cluster" ]]; then
        context="${eks_cluster}"
    fi
    ns="$(kubectl config view -o "jsonpath={.contexts[?(@.name==\"$context\")].context.namespace}")"
  $ vim +75 ~/.zshrc
    autoload -U colors; colors
    source ~/.oh-my-zsh/custom/plugins/zsh-kubectl-prompt/kubectl.zsh
    RPROMPT='%{$fg_bold[red]%}($ZSH_KUBECTL_PROMPT)%{$reset_color%}'
  $ source ~/.zshrc

neovim
  $ brew install neovim

tmux
  $ brew install tmux

tree
  $ brew install tree

fzf
  $ brew install fzf

ack
  $ brew install ack

httpie
  $ brew install httpie

jq
  $ brew install jq

yq
  $ brew install yq

sops
  $ brew install sops

envsubst
  $ brew install gettext
  $ brew link --force gettext

git
  $ brew install git

git ssh
  https://confluence.atlassian.com/bitbucket/set-up-ssh-for-git-728138079.html
  $ ssh -V
  $ ssh-keygen
    default file
    ssh-key-password
  $ ls ~/.ssh
  $ eval `ssh-agent`
  $ ssh-add -K ~/.ssh/id_rsa
  $ vim ~/.ssh/config
    Host *
      UseKeychain yes
  Copy and paste into GitHub SSH Keys: srussell-mac
  $ cd ~/dev
  $ git clone git@github.com:AmundsenJunior/dotfiles.git
    Unlock key, and auto-unlock when logged in

git-crypt
  $ brew install git-crypt

docker
  https://docs.docker.com/docker-for-mac/install/

kubectl
  $ brew install kubernetes-cli

minikube
  $ brew cask install minikube

  https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#hyperkit-driver
  $ minikube start --cpus=4 --memory=8096 --disk-size=80g --kubernetes-version=1.15.4 --vm-driver hyperkit
  $ minikube addons enable ingress
  $ minikube addons enable heapster
  $ minikube addons open heapster
  $ minikube dashboard 

helm
  $ brew install kubernetes-helm
  $ helm init (into minikube)

lens
  Download latest stable from https://github.com/lensapp/lens/releases

aws-cli
  $ brew install awscli
  $ aws configure

eksctl
  $ brew install weaveworks/tap/eksctl

kompose
  $ brew install kompose

sublime
  $ brew cask install sublime-text
  $ subl
  Preferences > Settings > user settings, add "ignored_packages": []

go
  $ brew install go

goland
  $ brew cask install goland

terraform
  $ brew install terraform

terragrunt
  $ brew install terragrunt

tfenv
  $ brew install tfenv

tgenv
  $ git clone https://github.com/cunymatthieu/tgenv.git ~/.tgenv
  $ ln -s ~/.tgenv/bin/* /usr/local/bin

Spotify
  $ brew cask install spotify

Alfred
  $ brew cask install alfred

python
  $ brew install python

pyenv
  $ brew install pyenv

pipenv
  $ brew install pipenv

pgcli
  $ brew install pgcli
  $ pgcli (creates ~/.config/pgcli/config file)

  Adding DSNs to config
  $ vim ~/.config/pgcli/config
    [alias_dsn]
    prod_redshift = "host=redshiftclusterurl.us-east-1.redshift.amazonaws.com port=5439 dbname=proddb user=dbuser"

pgadmin
  $ brew cask install pgadmin4

nodejs
  $ brew install node

env.sh
  #!/bin/zsh

  export GOPATH="/Users/scott.russell/dev/go"
  export PYTHONPATH="/usr/local/opt/python"
  export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$GOPATH/bin:$PYTHONPATH/libexec/bin"
  export EDITOR=vim

  # Create a folder and move into it in one command
  function mkcd() { mkdir -p "$@" && cd "$_"; }

  alias tsw="tmux split-window"
  alias mk="minikube"


  $ vim ~/.zshrc
    source ~/dev/dotfiles/env.sh
  $ source ~/.zshrc

https://towardsdatascience.com/customising-the-mac-terminal-to-increase-productivity-and-improve-the-interface-894f6d86d573
https://sourabhbajaj.com/mac-setup/iTerm/zsh.html
https://docs.docker.com/docker-for-mac/install/


TODO


kubernetes
  https://matthewpalmer.net/kubernetes-app-developer/articles/how-to-run-local-kubernetes-docker-for-mac.html
  Enable Kubernetes in Docker for Mac
  $ kubectl config get-contexts
  $ kubectl config use-context docker-for-desktop
  $ kubectl config current-context

kubernetes-dashboard
  https://rominirani.com/tutorial-getting-started-with-kubernetes-with-docker-on-mac-7f58467203fd
  http://collabnix.com/kubernetes-dashboard-on-docker-desktop-for-windows-2-0-0-3-in-2-minutes/
  $ kubectl config use-context docker-for-desktop
  $ kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
  $ kubectl -n kube-system edit svc kubernetes-dashboard
    spec:
      type: ClusterIP -> NodePort
  $ kubectl -n kube-system edit deployment kubernetes-dashboard
    spec:
      template:
        spec:
          containers:
          - args
            - --auto-generate-certificates
            - --enable-skip-login
  $ kubectl -n kube-system get svc kubernetes-dashboard
  Chrome: https://127.0.0.1:PORT

minikube
  Enable Heapster metrics
    $ minikube addons enable heapster
    $ kubectl label svc heapster kubernetes.io/minikube-addons-endpoint=heapster --namespace kube-system
    $ minikube addons open heapster

  Use Minikube VM as Docker environment
    $ eval $(minikube docker-env)

